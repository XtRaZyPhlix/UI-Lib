local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create Window
local Window = Fluent:CreateWindow({
    Title = "Test",
    SubTitle = "by #####",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,  -- Enable blur effect (set to false to disable blur)
    Theme = "Dark",  -- Set the theme to "Dark" or any other available theme
    MinimizeKey = Enum.KeyCode.LeftControl  -- Keybind for minimizing
})

-- Add Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "box" }),
    MobAreas = Window:AddTab({ Title = "Mob Areas", Icon = "person-standing" }),
    Pillar = Window:AddTab({ Title = "Elemental Pilars", Icon = "zap" }),
    Reach = Window:AddTab({ Title = "Reach", Icon = "swords" }),
    Gamepass = Window:AddTab({ Title = "Gamepass", Icon = "badge" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "hexagon" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Variables for Mob Selection
local mob = ""
local item = ""

-- Mob Selection Section
do
    Tabs.Main:AddParagraph({
        Title = "Mob Selection",
        Content = "Type Mob Name"
    })

    -- Mob Name Input
    local MobName = Tabs.Main:AddInput("Mob Name", {
        Title = "Mob Name",
        Default = "",
        Placeholder = "Mob Name",
        Numeric = false,
        Finished = false,
        Callback = function(input)
            mob = input
        end
    })

    -- Toggle for Mob Interaction
    local ToggleMob = Tabs.Main:AddToggle("Toggle Mob", { Title = "Toggle Mob", Default = false })

    ToggleMob:OnChanged(function(Loop)
        local player = game.Players.LocalPlayer
        local character = player.Character

        -- Ensure character exists
        if not character then return end

        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end

        _G.on = Loop

        while _G.on do
            task.wait(0.8)

            -- Loop through enemies and find matching mobs
            for _, enemy in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(enemy.Name, mob) then
                    local enemyRootPart = enemy:FindFirstChild("HumanoidRootPart")
                    if enemyRootPart then
                        -- Anchor and move mob if conditions met
                        enemyRootPart.Anchored = true
                        enemyRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(1, 3, -5)
                    end
                end
            end
        end
    end)

    local ToggleMobHit = Tabs.Main:AddToggle("Toggle Mob Hit", { Title = "Toggle Mob Hit", Default = false })

    ToggleMobHit:OnChanged(function(Loop)
        _G.enabled = Loop
        while _G.enabled == true do 
            task.wait(.25) do
                game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer(unpack(args))
            end
        end
    end)

    local ToggleMobKill = Tabs.Main:AddToggle("Toggle Mob Kill", { Title = "Toggle Mob Kill", Default = false })

    ToggleMobKill:OnChanged(function(Loop)
        _G.on = Loop
        while _G.on do 
            task.wait(0.8)
            
            local player = game.Players.LocalPlayer
            local tool = player.Character and player.Character:FindFirstChildOfClass("Tool")
            if not tool then continue end  -- Skip iteration if no tool is found
            
            for _, enemy in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(enemy.Name, mob) then
                    local remotes = game:GetService("ReplicatedStorage").Remotes
                    if remotes:FindFirstChild("UseItem") then
                        remotes.UseItem:FireServer(unpack(args))
                    end
                    
                    local part = enemy:FindFirstChildOfClass("Part")
                    if part then
                        -- Simulate touching the enemy
                        firetouchinterest(tool.Handle, part, 0)
                        firetouchinterest(tool.Handle, part, 1)
                    end
                end
            end
        end
    end)

    local ToggleGold = Tabs.Main:AddToggle("500k Gold", { Title = "500k Gold", Default = false })

    ToggleGold:OnChanged(function(Loop)
        _G.toggle = Loop
        while _G.toggle do 
            task.wait(0.1)  -- Shortened wait time to avoid freezing the script
            local player = game.Players.LocalPlayer
            local humanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
            
            -- Ensure character and HumanoidRootPart exist
            if humanoidRootPart then
                local finishCFrame = game:GetService("Workspace").Secrets.Obby.Spawns.Finish.CFrame
                humanoidRootPart.CFrame = finishCFrame
            end

            -- Check if remotes exist and fire Sell remote
            local remotes = game:GetService("ReplicatedStorage").Remotes
            if remotes:FindFirstChild("Sell") then
                remotes.Sell:FireServer("Diaboli", 5555555)
            end
            task.wait(0.01)  -- Small delay before repeating
        end
    end)

--Mob Areas ---------------------------------------------------------------

local areas = {
    ["Lvl 0 Area"] = {"Goblin", "Goblin Leader"},
    ["Lvl 5 Area"] = {"Mummy", "Sandman"},
    ["Lvl 10 Area"] = {"Ice Guardian", "Frostbite Ice Knight"},
    ["Lvl 20 Area"] = {"Skeleton", "Skeleton King"},
    ["Lvl 30 Area"] = {"Magma Minion", "Magma Thrasher"},
    ["Lvl 40 Area"] = {"Swamp Monster", "Swamp Guardian"},
    ["Lvl 50 Area"] = {"Orc", "Orc Leader"},
    ["Lvl 60 Area"] = {"Cloud Lurker", "Cloud Lord"},
    ["Lvl 70 Area"] = {"Zombie", "Ghost"},
    ["Lvl 80 Area"] = {"Robot", "Malfunctioning Robot", "Killer Robot"},
    ["Lvl 90 Area"] = {"Vampire", "Vampire King"},
    ["Lvl 100 Area"] = {"The Bone Lord's Son"},
    ["Lvl 120 Area"] = {"Korblox Deathspeaker"},
    ["Lvl 140 Area"] = {"Warth of Korblox"},
    ["Lvl 170 Area"] = {"Korblox Deathspeaker"},
    ["Lvl 200 Area"] = {"Korblox Deathspeaker", "Korblox Apprentice", "Wrath of Korblox", "Korblox, Lord of Corruption"},
    ["Lvl 250 Area"] = {"Vienyx", "Chrythm"},
    ["Lvl 500 Area"] = {"elijah1113456"},
    ["Lvl 750 Area"] = {"Flame Minion", "Flame Master"},
    ["Lvl 1k Area"] = {"Builderman"},
    ["Lvl 2.5k Area"] = {"Giancarlo"},
    ["Lvl 5k Area"] = {"Ajax", "Life Keeper", "Life Keeper Boss"},
    ["Lvl 10k Area"] = {"Togarmah"},
    ["Lvl 12.5k Area"] = {"Flare", "The Sun"},
    ["Lvl 15k Area"] = {"Spirit", "Spiritual Wisp"},
    ["Lvl 17.5k Area"] = {"Lime Blaze", "Blaze Master"},
    ["Lvl 20k Area"] = {"Pumpkin Minion", "Horseless Headman"},
    ["Lvl 22.5k Area"] = {"Floating Eye", "The Nightmare"},
    ["Lvl 25k Area"] = {"The Mazemaster"},
    ["Lvl 27.5k Area"] = {"Alien Follower", "Alien Monarch"},
    ["Lvl 30k Area"] = {"Demon", "Devil"},
    ["Lvl 32.5k Area"] = {"Angel", "God"},
    ["Lvl 35k Area"] = {"Radioactive Beast", "Braen, the Corrupt"},
    ["Lvl 37.5k Area"] = {"Knight of Light", "Helge, the Heavenly"},
    ["Lvl 40k Area"] = {"Neon Warrior", "Ultimate Neon Boss"},
    ["Lvl 42.5k Area"] = {"Salt Crystal", "AshedIce, the Saltiest"},
    ["Lvl 45k Area"] = {"Ball of Gold", "QuiteFox9496244, the Loyal"},
    ["Lvl 47.5k Area"] = {"Pomeranian", "Rory968, the Pomeranian Ruler"},
    ["Lvl 50k Area"] = {"Skeleton", "The Bone Lord"},
    ["Lvl 60k Area"] = {"Magma Skeleton", "Titan Volcanus"},
    ["Lvl 70k Area"] = {"Thunder Cloud", "Titan Fulmen"},
    ["Lvl 80k Area"] = {"Ice Wisp", "Titan Glacies"},
    ["Lvl 90k Area"] = {"Evil Bush", "Titan Terra"},
    ["Lvl 100k Area"] = {"Titan Venenum"},
    ["Lvl 125k Area"] = {"Titan Inani"},
    ["Lvl 150k Area"] = {"Titan Vortex"},
    ["Lvl 175k Area"] = {"Titan Aureus"},
    ["Lvl 200k Area"] = {"Titan Vitreus"},
    ["Lvl 250k Area"] = {"Titan Solis"},
    ["Lvl 300k Area"] = {"Titan Duplex"},
    ["Lvl 350k Area"] = {"Titan Subtus"},
    ["Lvl 400k Area"] = {"Titan Mars"},
    ["Lvl 450k Area"] = {"Titan Vita"},
    ["Lvl 500k Area"] = {"Use Tp in Elemental"},
    ["Lvl 600k Area"] = {"Mini Mushy", "Mushroom Deity"},
    ["Lvl 750k Area"] = {"Noxious Deity"},
    ["Lvl 1.0m Area"] = {"Snow Brawler", "Snow Deity"},
    ["Lvl 1.5m Area"] = {"Plasma Deity"},
    ["Lvl 2.0m Area"] = {"Fire Deity"},
    ["Lvl 2.5m Area"] = {"Love Deity"},
    ["Lvl 3.0m Area"] = {"Medieval Deity"},
    ["Lvl 3.5m Area"] = {"Luck Deity"},
    ["Lvl 4.0m Area"] = {"Sea Deity"},
    ["Lvl 4.5m Area"] = {"ClockworkMinion", "Clockwork Miniboss", "EntropyOrb", "Entropy Deity"},
    ["Secret Bosses"] = {"Scrub", "Dark Skeleton", "The Currupted Bone Lord [FINAL BOSS]", "Light Knight", "Keeper of all Light", "MoonMan", "Spate", "BoldsGold", "The Dark Lord", "I Bone Lord", "Meme", "Ewansiha", "WEE WOO BOSS!!11!", "Hazarmaveth", "Elftronic", "Snowtronic", "Santa 2.0", "Golden Krampus", "Halloween Spirit", "amogus", "Rezokar"},
}

local selectedArea = "Lvl 0 Area"
local MobDropdown

local function updateMobDropdown()
    if MobDropdown then
        MobDropdown:SetOptions(areas[selectedArea] or {})
    end
end

local Dropdown = Tabs.MobAreas:AddDropdown("Dropdown", {
    Title = "Area",
    Values = selectedArea,
    Multi = false,
    Default = "Lvl 0 Area",
})

Dropdown:OnChanged(function(area)
        selectedArea = area
        updateMobDropdown()
    end)



end
--Addons ---------------------------------------------------------------

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()

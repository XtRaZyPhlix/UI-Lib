local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

-- Create Window
local Window = Fluent:CreateWindow({
    Title = "Test",
    SubTitle = "by #####",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true,  -- Enable blur effect (set to false to disable blur)
    Theme = "Dark",  -- Set the theme to "Dark" or any other available theme
    MinimizeKey = Enum.KeyCode.LeftControl  -- Keybind for minimizing
})

-- Add Tabs
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "box" }),
    MobAreas = Window:AddTab({ Title = "Mob Areas", Icon = "person-standing" }),
    Pillar = Window:AddTab({ Title = "Pilars", Icon = "clipboard-check" }),
    Reach = Window:AddTab({ Title = "Reach", Icon = "swords" }),
    Gamepass = Window:AddTab({ Title = "Gamepass", Icon = "award" }),
    Misc = Window:AddTab({ Title = "Misc", Icon = "hexagon" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

-- Variables for Mob Selection
local mob = ""
local args = {}  -- Ensure args is defined globally for all uses
local player = game.Players.LocalPlayer

-- Mob Selection Section
do
    Tabs.Main:AddParagraph({
        Title = "Mob Selection",
        Content = "Type Mob Name"
    })

    -- Mob Name Input
    local MobName = Tabs.Main:AddInput("Mob Name", {
        Title = "Mob Name",
        Default = "",
        Placeholder = "Mob Name",
        Numeric = false,
        Finished = false,
        Callback = function(input)
            mob = input
        end
    })

    -- Toggle for Mob Interaction
    local ToggleMob = Tabs.Main:AddToggle("Toggle Mob", { Title = "Toggle Mob", Default = false })

    ToggleMob:OnChanged(function(Loop)
        local character = player.Character

        -- Ensure character exists
        if not character then return end

        local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then return end

        _G.on = Loop

        while _G.on do
            task.wait(0.8)

            -- Loop through enemies and find matching mobs
            for _, enemy in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(enemy.Name, mob) then
                    local enemyRootPart = enemy:FindFirstChild("HumanoidRootPart")
                    if enemyRootPart then
                        -- Anchor and move mob if conditions met
                        enemyRootPart.Anchored = true
                        enemyRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(1, 3, -3)
                    end
                end
            end
        end
    end)

    -- Toggle for Mob Hit Interaction
    local ToggleMobHit = Tabs.Main:AddToggle("Toggle Mob Hit", { Title = "Toggle Mob Hit", Default = false })

    ToggleMobHit:OnChanged(function(Loop)
        _G.enabled = Loop
        while _G.enabled do
            task.wait(0.25)

            -- Ensure args is a valid table
            if type(args) ~= "table" then
                args = {}  -- Default to an empty table if args is invalid
            end

            -- Fire the remote only if it's a valid table
            local remotes = game:GetService("ReplicatedStorage").Remotes
            if remotes and remotes:FindFirstChild("UseItem") then
                remotes.UseItem:FireServer(unpack(args))  -- Fire remote with unpacked args
            end
        end
    end)

    -- Toggle for Mob Kill Interaction
    local ToggleMobKill = Tabs.Main:AddToggle("Toggle Mob Kill", { Title = "Toggle Mob Kill", Default = false })

    ToggleMobKill:OnChanged(function(Loop)
        _G.on = Loop
        while _G.on do
            task.wait(0.8)

            local character = player.Character
            local tool = character and character:FindFirstChildOfClass("Tool")
            if not tool then continue end  -- Skip iteration if no tool is found

            for _, enemy in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(enemy.Name, mob) then
                    -- Ensure args is defined and is a table
                    if type(args) ~= "table" then
                        args = {}  -- Default to an empty table if args is invalid
                    end

                    -- Fire the remote only if it's a valid table
                    local remotes = game:GetService("ReplicatedStorage").Remotes
                    if remotes and remotes:FindFirstChild("UseItem") then
                        remotes.UseItem:FireServer(unpack(args))  -- Fire remote with unpacked args
                    end

                    local part = enemy:FindFirstChildOfClass("Part")
                    if part then
                        -- Simulate touching the enemy
                        firetouchinterest(tool.Handle, part, 0)
                        firetouchinterest(tool.Handle, part, 1)
                    end
                end
            end
        end
    end)

    -- Toggle for 500k Gold
    local ToggleGold = Tabs.Main:AddToggle("500k Gold", { Title = "500k Gold", Default = false })

    ToggleGold:OnChanged(function(Loop)
        _G.toggle = Loop
        while _G.toggle do
            task.wait(0.1)  -- Shortened wait time to avoid freezing the script
            local character = player.Character
            local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
            
            -- Ensure character and HumanoidRootPart exist
            if humanoidRootPart then
                local finishCFrame = game:GetService("Workspace").Secrets.Obby.Spawns.Finish.CFrame
                humanoidRootPart.CFrame = finishCFrame
            end

            -- Check if remotes exist and fire Sell remote
            local remotes = game:GetService("ReplicatedStorage").Remotes
            if remotes and remotes:FindFirstChild("Sell") then
                remotes.Sell:FireServer("Diaboli", 5555555)
            end

            task.wait(0.01)  -- Small delay before repeating
        end
    end)

--Mob Areas ---------------------------------------------------------------

-- Areas Table: Contains the names of the areas
local areas = {
    "Lvl 0 Area", "Lvl 5 Area", "Lvl 10 Area", "Lvl 20 Area", "Lvl 30 Area", "Lvl 40 Area",
    "Lvl 50 Area", "Lvl 60 Area", "Lvl 70 Area", "Lvl 80 Area", "Lvl 90 Area", "Lvl 100 Area",
    "Lvl 120 Area", "Lvl 140 Area", "Lvl 170 Area", "Lvl 200 Area", "Lvl 250 Area", "Lvl 500 Area",
    "Lvl 750 Area", "Lvl 1k Area", "Lvl 2.5k Area", "Lvl 5k Area", "Lvl 10k Area", "Lvl 12.5k Area",
    "Lvl 15k Area", "Lvl 17.5k Area", "Lvl 20k Area", "Lvl 22.5k Area", "Lvl 25k Area", "Lvl 27.5k Area",
    "Lvl 30k Area", "Lvl 32.5k Area", "Lvl 35k Area", "Lvl 37.5k Area", "Lvl 40k Area", "Lvl 42.5k Area",
    "Lvl 45k Area", "Lvl 47.5k Area", "Lvl 50k Area", "Lvl 60k Area", "Lvl 70k Area", "Lvl 80k Area",
    "Lvl 90k Area", "Lvl 100k Area", "Lvl 125k Area", "Lvl 150k Area", "Lvl 175k Area", "Lvl 200k Area",
    "Lvl 250k Area", "Lvl 300k Area", "Lvl 350k Area", "Lvl 400k Area", "Lvl 450k Area", "Lvl 500k Area",
    "Lvl 600k Area", "Lvl 750k Area", "Lvl 1.0m Area", "Lvl 1.5m Area", "Lvl 2.0m Area", "Lvl 2.5m Area",
    "Lvl 3.0m Area", "Lvl 3.5m Area", "Lvl 4.0m Area", "Lvl 4.5m Area", "Secret Bosses"
}

-- Mobs Table: Contains the mobs for each area
local areaMobs = {
    ["Lvl 0 Area"] = {"Goblin", "Goblin Leader"},
    ["Lvl 5 Area"] = {"Mummy", "Sandman"},
    ["Lvl 10 Area"] = {"Ice Guardian", "Frostbite Ice Knight"},
    ["Lvl 20 Area"] = {"Skeleton", "Skeleton King"},
    ["Lvl 30 Area"] = {"Magma Minion", "Magma Thrasher"},
    ["Lvl 40 Area"] = {"Swamp Monster", "Swamp Guardian"},
    ["Lvl 50 Area"] = {"Orc", "Orc Leader"},
    ["Lvl 60 Area"] = {"Cloud Lurker", "Cloud Lord"},
    ["Lvl 70 Area"] = {"Zombie", "Ghost"},
    ["Lvl 80 Area"] = {"Robot", "Malfunctioning Robot", "Killer Robot"},
    ["Lvl 90 Area"] = {"Vampire", "Vampire King"},
    ["Lvl 100 Area"] = {"The Bone Lord's Son"},
    ["Lvl 120 Area"] = {"Korblox Deathspeaker"},
    ["Lvl 140 Area"] = {"Warth of Korblox"},
    ["Lvl 170 Area"] = {"Korblox Deathspeaker"},
    ["Lvl 200 Area"] = {"Korblox Deathspeaker", "Korblox Apprentice", "Wrath of Korblox", "Korblox, Lord of Corruption"},
    ["Lvl 250 Area"] = {"Vienyx", "Chrythm"},
    ["Lvl 500 Area"] = {"elijah1113456"},
    ["Lvl 750 Area"] = {"Flame Minion", "Flame Master"},
    ["Lvl 1k Area"] = {"Builderman"},
    ["Lvl 2.5k Area"] = {"Giancarlo"},
    ["Lvl 5k Area"] = {"Ajax", "Life Keeper", "Life Keeper Boss"},
    ["Lvl 10k Area"] = {"Togarmah"},
    ["Lvl 12.5k Area"] = {"Flare", "The Sun"},
    ["Lvl 15k Area"] = {"Spirit", "Spiritual Wisp"},
    ["Lvl 17.5k Area"] = {"Lime Blaze", "Blaze Master"},
    ["Lvl 20k Area"] = {"Pumpkin Minion", "Horseless Headman"},
    ["Lvl 22.5k Area"] = {"Floating Eye", "The Nightmare"},
    ["Lvl 25k Area"] = {"The Mazemaster"},
    ["Lvl 27.5k Area"] = {"Alien Follower", "Alien Monarch"},
    ["Lvl 30k Area"] = {"Demon", "Devil"},
    ["Lvl 32.5k Area"] = {"Angel", "God"},
    ["Lvl 35k Area"] = {"Radioactive Beast", "Braen, the Corrupt"},
    ["Lvl 37.5k Area"] = {"Knight of Light", "Helge, the Heavenly"},
    ["Lvl 40k Area"] = {"Neon Warrior", "Ultimate Neon Boss"},
    ["Lvl 42.5k Area"] = {"Salt Crystal", "AshedIce, the Saltiest"},
    ["Lvl 45k Area"] = {"Ball of Gold", "QuiteFox9496244, the Loyal"},
    ["Lvl 47.5k Area"] = {"Pomeranian", "Rory968, the Pomeranian Ruler"},
    ["Lvl 50k Area"] = {"Skeleton", "The Bone Lord"},
    ["Lvl 60k Area"] = {"Magma Skeleton", "Titan Volcanus"},
    ["Lvl 70k Area"] = {"Thunder Cloud", "Titan Fulmen"},
    ["Lvl 80k Area"] = {"Ice Wisp", "Titan Glacies"},
    ["Lvl 90k Area"] = {"Evil Bush", "Titan Terra"},
    ["Lvl 100k Area"] = {"Titan Venenum"},
    ["Lvl 125k Area"] = {"Titan Inani"},
    ["Lvl 150k Area"] = {"Titan Vortex"},
    ["Lvl 175k Area"] = {"Titan Aureus"},
    ["Lvl 200k Area"] = {"Titan Vitreus"},
    ["Lvl 250k Area"] = {"Titan Solis"},
    ["Lvl 300k Area"] = {"Titan Duplex"},
    ["Lvl 350k Area"] = {"Titan Subtus"},
    ["Lvl 400k Area"] = {"Titan Mars"},
    ["Lvl 450k Area"] = {"Titan Vita"},
    ["Lvl 500k Area"] = {"Use Tp in Elemental"},
    ["Lvl 600k Area"] = {"Mini Mushy", "Mushroom Deity"},
    ["Lvl 750k Area"] = {"Noxious Deity"},
    ["Lvl 1.0m Area"] = {"Snow Brawler", "Snow Deity"},
    ["Lvl 1.5m Area"] = {"Plasma Deity"},
    ["Lvl 2.0m Area"] = {"Fire Deity"},
    ["Lvl 2.5m Area"] = {"Love Deity"},
    ["Lvl 3.0m Area"] = {"Medieval Deity"},
    ["Lvl 3.5m Area"] = {"Luck Deity"},
    ["Lvl 4.0m Area"] = {"Sea Deity"},
    ["Lvl 4.5m Area"] = {"ClockworkMinion", "Clockwork Miniboss", "EntropyOrb", "Entropy Deity"},
    ["Secret Bosses"] = {"Scrub", "Dark Skeleton", "The Currupted Bone Lord [FINAL BOSS]", "Light Knight", "Keeper of all Light", "MoonMan", "Spate", "BoldsGold", "The Dark Lord", "I Bone Lord", "Meme", "Ewansiha", "WEE WOO BOSS!!11!", "Hazarmaveth", "Elftronic", "Snowtronic", "Santa 2.0", "Golden Krampus", "Halloween Spirit", "amogus", "Rezokar"}
}

--------------------------------

local selectedArea = "Lvl 0 Area"  -- Default selected area
local selectedMob2 = ""  -- Default mob

-- Create Area Dropdown
local AreaDropdown = Tabs.MobAreas:AddDropdown("AreaDropdown", {
    Title = "Area",
    Values = areas,  -- All available areas
    Multi = false,
    Default = "Select Area",
})

-- Create Mob Dropdown
local MobDropdown = Tabs.MobAreas:AddDropdown("MobDropdown", {
    Title = "Mob Spawns",
    Values = areaMobs[selectedArea],  -- Default mobs based on the selected area
    Multi = false,
    Default = "Select Mob",
})

-- Listen for mob selection and update the selected mob
MobDropdown:OnChanged(function(mobName)
    selectedMob2 = mobName  -- Update selected mob
end)

-- Listen for area changes and update the selected area and mob dropdown
AreaDropdown:OnChanged(function(area)
    selectedArea = area  -- Update selected area
    local mobsForArea = areaMobs[selectedArea]  -- Get mobs for the selected area
    
    -- Update MobDropdown values based on selected area
    MobDropdown:SetValues(mobsForArea)
end)

-- Toggle for Mob Interaction
local ToggleMob2 = Tabs.MobAreas:AddToggle("ToggleMob", { Title = "Toggle Mob", Default = false })

------------------------------

ToggleMob2:OnChanged(function(Loop)
    local character = game.Players.LocalPlayer.Character

    -- Ensure character exists and is valid
    if not character then return end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end

    _G.on = Loop  -- Store the toggle state

    while _G.on do
        task.wait(0.8)  -- Adjust delay for better performance

        -- Loop through enemies and find matching mobs
        for _, enemy in pairs(game.Workspace.Enemies:GetChildren()) do
            if string.find(enemy.Name, selectedMob2) then
                local enemyRootPart = enemy:FindFirstChild("HumanoidRootPart")
                if enemyRootPart then
                    -- Anchor and move mob if conditions met
                    enemyRootPart.Anchored = true
                    enemyRootPart.CFrame = humanoidRootPart.CFrame * CFrame.new(1, 3, -3)
                end
            end
        end
    end
end)

-- Toggle for Mob Hit Interaction
local ToggleMobHit2 = Tabs.MobAreas:AddToggle("Toggle Mob Hit", { Title = "Toggle Mob Hit", Default = false })

ToggleMobHit2:OnChanged(function(Loop)
    _G.enabled = Loop
    while _G.enabled do
        task.wait(0.25)

        -- Ensure args is a valid table
        if type(args) ~= "table" then
            args = {}  -- Default to an empty table if args is invalid
        end

        -- Fire the remote only if it's a valid table
        local remotes = game:GetService("ReplicatedStorage").Remotes
        if remotes and remotes:FindFirstChild("UseItem") then
            remotes.UseItem:FireServer(unpack(args))  -- Fire remote with unpacked args
        end
    end
end)

-- Toggle for Mob Kill Interaction
local ToggleMobKill2 = Tabs.MobAreas:AddToggle("Toggle Mob Kill", { Title = "Toggle Mob Kill", Default = false })

ToggleMobKill2:OnChanged(function(Loop)
    _G.on = Loop
    while _G.on do
        task.wait(0.8)

        local character = player.Character
        local tool = character and character:FindFirstChildOfClass("Tool")
        if not tool then continue end  -- Skip iteration if no tool is found

        for _, enemy in pairs(game.Workspace.Enemies:GetChildren()) do
            if string.find(enemy.Name, selectedMob2) then
                -- Ensure args is defined and is a table
                if type(args) ~= "table" then
                    args = {}  -- Default to an empty table if args is invalid
                end

                -- Fire the remote only if it's a valid table
                local remotes = game:GetService("ReplicatedStorage").Remotes
                if remotes and remotes:FindFirstChild("UseItem") then
                    remotes.UseItem:FireServer(unpack(args))  -- Fire remote with unpacked args
                end

                local part = enemy:FindFirstChildOfClass("Part")
                if part then
                    -- Simulate touching the enemy
                    firetouchinterest(tool.Handle, part, 0)
                    firetouchinterest(tool.Handle, part, 1)
                end
            end
        end
    end
end)

--Pillar ---------------------------------------------------------------

Tabs.Pillar:AddParagraph({
    Title = "Elemental Pillars ⚡❄️🔥💧🪐🌌",
    Content = "Lightning Elemental ⚡"
})

Tabs.Pillar:AddButton({
    Title = "Tp to Titan Fulmen ⚡",
    Description = "",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-329.076752, 468.891327, 1781.47424, 0.990085721, 4.06676861e-08, -0.140464619, -3.72004259e-08, 1, 2.7309909e-08, 0.140464619, -2.18138076e-08, 0.990085721)
    end
})



Tabs.Pillar:AddParagraph({
    Title = "Ice Elemental ❄️",
    Content = ""
})

local ToggleTpIce = Tabs.Pillar:AddToggle("Toggle Titan Glacies ❄️", {Title = "Toggle Titan Glacies ❄️", Default = false })

    ToggleTpIce:OnChanged(function(Loop)
        _G.on = Loop
        while _G.on == true do
            task.wait(.8)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Titan Glacies") then
                    v:FindFirstChild("HumanoidRootPart").Anchored = true
                    v:FindFirstChild("HumanoidRootPart").CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(1,3,-5)
                end
            end
        end
    end)

local ToggleHitIce = Tabs.Pillar:AddToggle("Toggle Hit Titan Glacies ❄️", {Title = "Toggle Hit Titan Glacies ❄️", Default = false })

    ToggleHitIce:OnChanged(function(Loop)
        local a = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
        _G.enabled = Loop
        while _G.enabled == true do
            task.wait(.25)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Titan Glacies") then
                    game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 0)
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 1)
                end
            end
        end
    end)

    Tabs.Pillar:AddParagraph({
        Title = "Fire Elemental 🔥",
        Content = ""
    })

local ToggleHitFire = Tabs.Pillar:AddToggle("Auto Attack 🔥 (Wait 5-7 Seconds)", {Title = "Auto Attack 🔥 (Wait 5-7 Seconds)", Default = false })

    ToggleHitFire:OnChanged(function(Loop)
        local a = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
        _G.attack = Loop
        while _G.attack do
            wait(.25)
            for i,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if v:FindFirstChild("Human") then
                    game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 0)
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 1)
                end
            end
        end
    end)

    Tabs.Pillar:AddParagraph({
        Title = "Water Elemental 💧",
        Content = ""
    })

local ToggleWater = Tabs.Pillar:AddToggle("Toggle Water Orbs 💧", {Title = "Toggle Water Orbs 💧", Default = false })

    ToggleWater:OnChanged(function(Loop)
        Orb = game:GetService("Workspace").WaterOrbs.Orb
        Chara = game.Players.LocalPlayer.Character
        basepart = Chara:FindFirstChildWhichIsA("BasePart")
        Count = 0
        --Script
        _G.Orbs = Loop
        while _G.Orbs == true do
            repeat
            wait (.25)
            firetouchinterest(Orb,basepart,0)
            firetouchinterest(Orb,basepart,1)
            Count = Count + 1
            until Count == 20
        end
    end)

    Tabs.Pillar:AddParagraph({
        Title = "Solar Elemental 🪐",
        Content = ""
    })

local ToggleHitSolar = Tabs.Pillar:AddToggle("Toggle Titan Solis 🪐", {Title = "Toggle Titan Solis 🪐", Default = false })

    ToggleHitSolar:OnChanged(function(Loop)
        _G.on = Loop
        while _G.on == true do
            task.wait(.8)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Titan Solis") then
                    v:FindFirstChild("HumanoidRootPart").Anchored = true
                    v:FindFirstChild("HumanoidRootPart").CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(1,3,-5)
                end
            end
        end
    end)

    Tabs.Pillar:AddButton({
        Title = "Tp to Flares 🪐",
        Description = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(895.248596, 321.131317, 2392.60742, 0.99999994, -6.26771246e-10, -0.000354468561, 5.76313275e-10, 1, -1.4234827e-07, 0.000354468561, 1.42348057e-07, 0.99999994)
        end
    })

local ToggleHitSolar2 = Tabs.Pillar:AddToggle("Toggle Hit Titan Solis 🪐", {Title = "Toggle Hit Titan Solis 🪐", Default = false })

    ToggleHitSolar2:OnChanged(function(Loop)
        local a = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
        _G.enabled = Loop
        while _G.enabled == true do
            task.wait(.25)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Titan Solis") then
                    game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 0)
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 1)
                end
            end
        end
    end)

local ToggleHitSolar3 = Tabs.Pillar:AddToggle("Toggle Hit Flares 🪐", {Title = "Toggle Hit Flares 🪐", Default = false })

    ToggleHitSolar3:OnChanged(function(Loop)
        local a = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
        _G.enabled = Loop
        while _G.enabled == true do
            task.wait(.25)
            for _,v in pairs(game.Workspace.Enemies:GetDescendants()) do
                if string.find(v.Name, "Flare") then
                    game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 0)
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 1)
                end
            end
        end
    end)
    
    Tabs.Pillar:AddParagraph({
        Title = "Plasma Elemental 🌌",
        Content = ""
    })

local ToggleHitPlasma = Tabs.Pillar:AddToggle("Toggle Titans 🌌", {Title = "Toggle Titans 🌌", Default = false })

    ToggleHitPlasma:OnChanged(function(Loop)
        _G.on = Loop
        while _G.on == true do
            task.wait(.8)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Titan") then
                    v:FindFirstChild("HumanoidRootPart").Anchored = true
                    v:FindFirstChild("HumanoidRootPart").CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(1,3,-5)
                end
            end
        end
    end)

    Tabs.Pillar:AddButton({
        Title = "Tp to Mother of Chaos 🌌",
        Description = "",
        Callback = function()
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-6199.5874, 106.824211, -40.1784744, -0.0218606181, -1.14025532e-07, 0.999761045, -5.28366968e-08, 1, 1.12897467e-07, -0.999761045, -5.03560642e-08, -0.0218606181)
        end
    })

local ToggleHitPlasma2 = Tabs.Pillar:AddToggle("Toggle Mother of Chaos 🌌", {Title = "Toggle Mother of Chaos 🌌", Default = false })

    ToggleHitPlasma2:OnChanged(function(Loop)
        _G.on = Loop
        while _G.on == true do
            task.wait(.8)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Mother of Chaos") then
                    v:FindFirstChild("HumanoidRootPart").Anchored = true
                    v:FindFirstChild("HumanoidRootPart").CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(1,3,-5)
                end
            end
        end
    end)

local ToggleHitPlasma3 = Tabs.Pillar:AddToggle("Toggle Hit Mother of Chaos 🌌", {Title = "Toggle Hit Mother of Chaos 🌌", Default = false })

    ToggleHitPlasma3:OnChanged(function(Loop)
        local a = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
        _G.enabled = Loop
        while _G.enabled == true do
            task.wait(.25)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Mother of Chaos") then
                    game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 0)
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 1)
                end
            end
        end
    end)
    
local ToggleHitPlasma4 = Tabs.Pillar:AddToggle("Toggle Hit Aureum Statera 🌌", {Title = "Toggle Hit Aureum Statera 🌌", Default = false })

    ToggleHitPlasma4:OnChanged(function(Loop)
        local a = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
        _G.enabled = Loop
        while _G.enabled == true do
            task.wait(.5)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "Aureum Statera") then
                    game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 0)
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 1)
                end
            end
        end
    end)

local ToggleHitPlasma5 = Tabs.Pillar:AddToggle("Toggle Hit Elemental Pillars 🌌", {Title = "Toggle Hit Elemental Pillars 🌌", Default = false })

    ToggleHitPlasma5:OnChanged(function(Loop)
        local a = game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool")
        _G.enabled = Loop
        while _G.enabled == true do
            task.wait(.5)
            for _,v in pairs(game.Workspace.Enemies:GetChildren()) do
                if string.find(v.Name, "ElementalPillar") then
                    game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 0)
                    firetouchinterest(a.Handle, v:FindFirstChildOfClass("Part"), 1)
                end
            end
        end
    end)

--[[    
local ToggleHitPlasma = Tabs.Pillar:AddToggle("", {Title = "", Default = false })

    ToggleHitPlasma:OnChanged(function(Loop)
        
    end)
 ]]   

--[[
Tabs.Pillar:AddButton({
    Title = "",
    Description = "",
    Callback = function()
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-329.076752, 468.891327, 1781.47424, 0.990085721, 4.06676861e-08, -0.140464619, -3.72004259e-08, 1, 2.7309909e-08, 0.140464619, -2.18138076e-08, 0.990085721)
    end
})
]]

--Reach ---------------------------------------------------------------

local XValue = Tabs.Reach:AddSlider("X Value", {
    Title = "X Value",
    Description = "",
    Default = 1,
    Min = 1,
    Max = 2048,
    Rounding = 1,
    Callback = function(Value)
        X = Value
    end
})

local YValue = Tabs.Reach:AddSlider("Y Value", {
    Title = "Y Value",
    Description = "",
    Default = 1,
    Min = 1,
    Max = 2048,
    Rounding = 1,
    Callback = function(Value)
        Y = Value
    end
})

local ZValue = Tabs.Reach:AddSlider("Z Value", {
    Title = "Z Value",
    Description = "",
    Default = 1,
    Min = 1,
    Max = 2048,
    Rounding = 1,
    Callback = function(Value)
        Z = Value
    end
})

Tabs.Reach:AddButton({
    Title = "Apply Sword Reach ⚔️",
    Description = "",
    Callback = function()
        Players = game:GetService("Players")
        local plr = Players.LocalPlayer

        for i,v in pairs(plr.Character:GetDescendants()) do
            if v:IsA("Tool") then
                currentToolSize = v.Handle.Size
                currentGripPos = v.GripPos
                local a = Instance.new("SelectionBox")
                a.Name = "SelectionBoxCreated"
                a.Parent = v.Handle
                a.Adornee = v.Handle
                v.Handle.Massless = true
                v.Handle.CanCollide = false
                v.Handle.Transparency = 1
                v.Handle.Size = Vector3.new(X,Y,Z)
                v.GripPos = Vector3.new(0,0,0)
                plr.Character.Humanoid:UnequipTools()
            end
        end
})

local ToggleHit = Tabs.Reach:AddToggle("Toggle Hit", {Title = "Toggle Hit", Default = false })

    ToggleHit:OnChanged(function(Loop)
        _G.enabled = Loop
        while _G.enabled == true do
            wait(0.25) do
                game:GetService("ReplicatedStorage").Remotes.UseItem:FireServer()
            end
        end
    end)

--Gamepass ---------------------------------------------------------------

Tabs.Gamepass:AddButton({
    Title = "Quick Travel",
    Description = "",
    Callback = function()
        local parte = Instance.new("Model")
        parte.Parent = game:GetService("Players").LocalPlayer
        parte.Name = "QuickTravel"
    end
})

Tabs.Gamepass:AddButton({
    Title = "Teleportation",
    Description = "",
    Callback = function()
        local parte = Instance.new("Model")
        parte.Parent = game:GetService("Players").LocalPlayer
        parte.Name = "Teleportation"
    end
})

Tabs.Gamepass:AddButton({
    Title = "VIP",
    Description = "",
    Callback = function()
        local parte = Instance.new("Model")
        parte.Parent = game:GetService("Players").LocalPlayer
        parte.Name = "VIP"  
    end
})

Tabs.Gamepass:AddButton({
    Title = "Double XP",
    Description = "",
    Callback = function()
        local parte = Instance.new("Model")
        parte.Parent = game:GetService("Players").LocalPlayer
        parte.Name = "DoubleXP"
    end
})

Tabs.Gamepass:AddButton({
    Title = "Admin",
    Description = "",
    Callback = function()
        local parte = Instance.new("Model")
        parte.Parent = game:GetService("Players").LocalPlayer
        parte.Name = "IsAdmin"

        game:GetService("Players").LocalPlayer.PlayerID = 239345228
    end
})

Tabs.Gamepass:AddButton({
    Title = "Overseer",
    Description = "",
    Callback = function()
        local parte = Instance.new("Model")
        parte.Parent = game:GetService("Players").LocalPlayer
        parte.Name = "IsOverseer"

        game:GetService("Players").LocalPlayer.PlayerID = 360470140
    end
})

Tabs.Gamepass:AddButton({
    Title = "Developer",
    Description = "",
    Callback = function()
        local parte = Instance.new("Model")
        parte.Parent = game:GetService("Players").LocalPlayer
        parte.Name = "IsDeveloper"

        game:GetService("Players").LocalPlayer.PlayerID = 65001136
    end
})

Tabs.Gamepass:AddParagraph({
    Title = "To Use The Gamepasses You Need to execute while Loading Data",
    Content = "and Click The Gamepasses You Want"
})

--Misc ---------------------------------------------------------------

Tabs.Misc:AddButton({
    Title = "SimpleSpy2 GUI",
    Description = "",
    Callback = function()
        loadstring(game:HttpGet("https://gist.githubusercontent.com/Shortgtav/51d09b6bb2f501e87b04f3a0ae35fa73/raw/1bae07418e757cdec1432211e0ef6d497ff9a64b/Remote%2520Spy"))()
    end
})

Tabs.Misc:AddButton({
    Title = "Infinite Yield GUI",
    Description = "",
    Callback = function()

    end
})

local SimpleGui = Tabs.Misc:AddKeybind("Toggle SimpleSpy2 Gui", {
    Title = "Toggle SimpleSpy2 Gui",
    Mode = "Toggle", -- Always, Toggle, Hold
    Default = "Z", -- String as the name of the keybind (MB1, MB2 for mouse buttons)

    -- Occurs when the keybind is clicked, Value is `true`/`false`
    Callback = function()
        game.CoreGui:FindFirstChild("SimpleSpy2").Enabled = not game.CoreGui:FindFirstChild("SimpleSpy2").Enabled
    end
})


end
--Settings ---------------------------------------------------------------

-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
